{
  "name": "backtest-manager",
  "displayName": "Backtest Manager",
  "publisher": "woung717",
  "description": "Managing and running backtests on Visual Studio Code",
  "icon": "resource/logo.png",
  "homepage": "https://github.com/woung717/backtest-manager-vscode",
  "bugs": {
    "url": "https://github.com/woung717/backtest-manager-vscode/issues",
    "email": "woung717@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/woung717/backtest-manager-vscode.git"
  },
  "version": "0.1.2",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Data Science",
    "Visualization",
    "Snippets"
  ],
  "extensionDependencies": [
    "ms-python.python"
  ],
  "activationEvents": [
    "onView:backtest-manager-vscode"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Backtest Manager",
      "properties": {
        "backtestManager.verboseBacktestEngine": {
          "type": "boolean",
          "default": false,
          "description": "When running backtesting, the stdio is displayed in the output window. This is helpful for debugging when problems occur."
        },
        "backtestManager.preserveBacktestScriptFile": {
          "type": "boolean",
          "default": false,
          "description": "Whether to preserve the backtest script file after running a backtest. If set to true, the script file will not be deleted after the backtest is completed."
        }
      }
    },
    "commands": [
      {
        "command": "backtestManager.feedback",
        "title": "Backtest Manager: Leave Feedback"
      },
      {
        "command": "backtestManager.refreshProjectTreeView",
        "title": "Backtest Manager: Refresh Project Tree",
        "icon": "$(refresh)"
      },
      {
        "command": "backtestManager.createNewProject",
        "title": "Backtest Manager: Create New Project",
        "icon": "$(add)"
      },
      {
        "command": "backtestManager.runBacktest",
        "title": "Backtest Manager: Run Backtest",
        "icon": "$(dashboard)"
      },
      {
        "command": "backtestManager.runBacktestFromTree",
        "title": "Run Backtest",
        "icon": "$(dashboard)"
      },
      {
        "command": "backtestManager.showPriceChart",
        "title": "Show Price Chart"
      },
      {
        "command": "backtestManager.deleteBacktestResult",
        "title": "Delete"
      },
      {
        "command": "backtestManager.renameProject",
        "title": "Rename"
      },
      {
        "command": "backtestManager.deleteProject",
        "title": "Delete"
      },
      {
        "command": "backtestManager.refreshDatasetView",
        "title": "Backtest Manager: Refresh Dataset View",
        "icon": "$(refresh)"
      },
      {
        "command": "backtestManager.showDatasetChart",
        "title": "Show Chart"
      },
      {
        "command": "backtestManager.openDataset",
        "title": "Backtest Manager: Open Dataset"
      },
      {
        "command": "backtestManager.copyDatatsetPath",
        "title": "Copy Path"
      },
      {
        "command": "backtestManager.deleteDataset",
        "title": "Delete"
      },
      {
        "command": "backtestManager.showDatasetDownloader",
        "title": "Backtest Manager: Show Dataset Downloader",
        "icon": "$(cloud-download)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "tree-view-container",
          "title": "Backtest Manager",
          "icon": "$(dashboard)"
        }
      ]
    },
    "views": {
      "tree-view-container": [
        {
          "type": "tree",
          "id": "projectTreeView",
          "name": "Projects",
          "icon": "$(folder)"
        },
        {
          "type": "tree",
          "id": "datasetTreeView",
          "name": "Datasets",
          "icon": "$(database)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "backtestManager.refreshProjectTreeView",
          "when": "view == projectTreeView",
          "group": "navigation"
        },
        {
          "command": "backtestManager.createNewProject",
          "when": "view == projectTreeView",
          "group": "navigation"
        },
        {
          "command": "backtestManager.refreshDatasetView",
          "when": "view == datasetTreeView",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "backtestManager.runBacktest",
          "when": "resourceScheme == 'file' && resourcePath in backtestManager.entryFiles",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "backtestManager.runBacktestFromTree",
          "when": "view == projectTreeView && viewItem == project",
          "group": "inline"
        },
        {
          "command": "backtestManager.renameProject",
          "when": "view == projectTreeView && viewItem == project"
        },
        {
          "command": "backtestManager.showPriceChart",
          "when": "view == projectTreeView && viewItem == backtestResult"
        },
        {
          "command": "backtestManager.deleteBacktestResult",
          "when": "view == projectTreeView && viewItem == backtestResult"
        },
        {
          "command": "backtestManager.deleteProject",
          "when": "view == projectTreeView && viewItem == project"
        },
        {
          "command": "backtestManager.showDatasetDownloader",
          "when": "view == datasetTreeView && viewItem == assetFolder",
          "group": "inline"
        },
        {
          "command": "backtestManager.showDatasetChart",
          "when": "view == datasetTreeView && viewItem == dataset"
        },
        {
          "command": "backtestManager.copyDatatsetPath",
          "when": "view == datasetTreeView && viewItem == dataset"
        },
        {
          "command": "backtestManager.deleteDataset",
          "when": "view == datasetTreeView && viewItem == dataset"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && webpack --mode production --devtool hidden-source-map",
    "watch": "tsc -watch -p ./",
    "watch:webpack": "webpack --watch --mode development",
    "pretest": "npm run lint",
    "lint": "eslint src/**/*.ts",
    "test": "npm run compile && vscode-test",
    "dev": "webpack --mode development"
  },
  "devDependencies": {
    "@eslint/js": "^9.13.0",
    "@stylistic/eslint-plugin": "^2.9.0",
    "@tailwindcss/postcss": "^4.0.16",
    "@tailwindcss/vite": "^4.0.15",
    "@types/ejs": "^3.1.5",
    "@types/lowdb": "^1.0.11",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20",
    "@types/react": "^19.0.12",
    "@types/react-dom": "^19.0.4",
    "@types/vscode": "^1.73.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^3.4.2",
    "autoprefixer": "^10.4.19",
    "css-loader": "^6.10.0",
    "eslint": "^9.13.0",
    "mini-css-extract-plugin": "^2.8.1",
    "mocha": "^10.2.0",
    "postcss": "^8.5.3",
    "postcss-loader": "^7.3.4",
    "style-loader": "^3.3.4",
    "tailwindcss": "^4.0.15",
    "terser-webpack-plugin": "^5.3.14",
    "ts-loader": "^9.5.1",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.26.0",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@seald-io/nedb": "^4.1.1",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "ccxt": "^4.4.71",
    "ejs": "^3.1.10",
    "lightweight-charts": "^5.0.7",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  }
}
